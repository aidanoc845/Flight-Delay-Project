# -*- coding: utf-8 -*-
"""ot_flight_finder.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10KqGtm9_qeMYpv9KwAn4_l0u32I7b3hU
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from datetime import date
import ipywidgets as widgets
from IPython.display import display

# Read raw data
delayData = pd.read_csv("Airline_Delay_Cause_Apr24-Apr25.csv")

delayData['date'] = pd.to_datetime(
    delayData[['year', 'month']].assign(day=1)
)

# Drop year and keep only month number
delayData = delayData.drop(['year'], axis=1)

# Remove excess columns
delayData = delayData.drop(['carrier', 'airport_name'], axis=1)

# --- Combine Carrier + Airport + Month into One Table ---
# Make sure date is in datetime format
delayData['date'] = pd.to_datetime(delayData['date'])

# Group by Carrier, Airport, and Month-Year
grouped = (
    delayData
    .groupby([
        'carrier_name',
        'airport',
        delayData['date'].dt.month
    ])
    .agg(
        total_flights=('arr_flights', 'sum'),
        delayed_flights=('arr_del15', 'sum')
    )
    .reset_index()
)

# Convert period to string for widget
grouped.rename(columns={'date': 'month'})

# Calculate percent delayed
grouped['percent_delayed'] = (grouped['delayed_flights'] / grouped['total_flights'] * 100).round(2)

grouped.head()

# 10 lest delayed combination
top10_least = grouped.sort_values(by='percent_delayed', ascending=True).head(10)
print("\nTop 10 least delay combinations:")
print(top10_least)

# Save full combined dataset
grouped.to_csv("DOT_combined_carrier_airport_month.csv", index=False)
grouped.to_excel("DOT_combined_carrier_airport_month.xlsx", index=False)

df = pd.read_csv("DOT_combined_carrier_airport_month.csv")

# Create search widget
airport_box = widgets.Combobox(
    placeholder='Type airport code...',
    options=['All'] + sorted(df['airport'].unique()),
    description='Airport:',
    ensure_option=True,
    style={'description_width': 'initial'}
)

carrier_box = widgets.Combobox(
    placeholder='Type carrier name...',
    options=['All'] + sorted(df['carrier_name'].unique()),
    description='Carrier:',
    ensure_option=True,
    style={'description_width': 'initial'}
)

month_box = widgets.Combobox(
    placeholder='Type month number (1-12)...',
    options=['All'] + sorted([str(m) for m in df['date'].unique()]),
    description='Month:',
    ensure_option=True,
    style={'description_width': 'initial'}
)

# Function to filter and find least delayed options
def find_least_delayed(airport, carrier, month):
    filtered = df.copy()

    if airport and airport != 'All':
        filtered = filtered[filtered['airport'] == airport]
    if carrier and carrier != 'All':
        filtered = filtered[filtered['carrier_name'] == carrier]
    if month and month != 'All':
        filtered = filtered[filtered['date'] == int(month)]

    if filtered.empty:
        print("No flights match this filter.")
        return

    result = filtered.sort_values(by='percent_delayed', ascending=True).head(1)
    print("\nLeast delayed flight combination for your filter:")
    display(result)

# Run Seach Widget
widgets.interactive(
    find_least_delayed,
    airport=airport_box,
    carrier=carrier_box,
    month=month_box
)